name: Deploy

on:
  workflow_call:
    inputs:
      environmentName:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

env:
  ANGULAR_APP_LOCATION: angular_app
  OUTPUT_LOCATION: dist
  AZURE_WEBAPP_NAME: linkioback
  AZURE_WEBAPP_PACKAGE_PATH: "."
  DOTNET_VERSION: "8"

jobs:
  deploy_angular:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Download Angular app artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ANGULAR_APP_LOCATION }}
          path: ${{ env.ANGULAR_APP_LOCATION }}
      - name: Build And Deploy
        uses: Azure/static-web-apps-deploy@1a947af9992250f3bc2e68ad0754c0b0c11566c9
        env:
          ANGULAR_ENV: ${{secrets.ANGULAR_ENV}}
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: ${{ env.ANGULAR_APP_LOCATION }}
          output_location: ${{ env.OUTPUT_LOCATION }}
          skip_app_build: true

  deploy_dotnet:
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  initialize_database:
    runs-on: ubuntu-latest
    needs: [deploy_dotnet]
    steps:
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: efbundle
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Set up migration
        run: |
          unzip -o ./efbundle.zip
          echo '{ "ConnectionStrings": { "DefaultConnection": "" } }' > appsettings.json
          ls
      - name: Initialize database
        run: './efbundle.exe --connection "$SQL_CONNECTION_STRING" --verbose'
        env:
          SQL_CONNECTION_STRING: ${{secrets.SQL_CONNECTION_STRING}}
      - name: Azure logout
        run: az logout
